@import '../settings/animations';
@import '../settings/colors';
@import '../settings/spacings';
@import '../settings/radiuses';
@import '../settings/typography';
@import '../settings/buttons';

$default-lighter-shadow: 0 4px 12px rgba($color-firefly-black, 0.35);

@mixin buttonColors(
	$color: '',
	$background: '',
	$hover: '',
	$focus: '',
	$disabled: '',
	$ripple: '',
	$border: ''
) {
	@if $color != '' {
		color: $color;
	}

	@if $background != '' {
		background-color: $background;
	} @else {
		background-color: transparent;
	}

	@if $hover != '' {
		@if $border != '' or $background != '' {
			&:hover,
			&.-hovered,
			&:active,
			&.-active {
				background-color: $hover;
			}
		} @else {
			&:hover,
			&.-hovered,
			&:active,
			&.-active {
				color: $hover;
			}
		}
	}

	@if $focus != '' {
		&:focus,
		&.-focused {
			background-color: $focus;
		}
	}

	@if $disabled != '' {
		&:disabled,
		&.-disabled {
			background-color: $disabled;
		}
	}

	@if $ripple != '' {
		.ripple {
			background-color: $ripple !important;
		}
	}

	@if $border != '' {
		border: 1px solid $border;
	}
}

$button-small-min-height: 28px;
$button-medium-min-height: 32px;
$button-large-min-height: 48px;

$button-hover-alpha: 0.12;
$button-focus-alpha: 0.24;
$button-disabled-alpha: 0.6;

.a-button {
	$self: &;

	@include buttonM;

	align-items: center;
	background-color: transparent; // override defaut <button> background color
	border: 0;
	border-radius: 100px;
	cursor: pointer;
	display: inline-flex;
	min-height: $button-medium-min-height;
	font-weight: 700;
	justify-content: center;
	outline: none;
	padding: $space-xxxxs $space-s;
	position: relative;
	text-transform: uppercase;
	transform-style: preserve-3d;
	transition: color ease-in-out $default-transition-time,
		border-color ease-in-out $default-transition-time,
		background-color ease-in-out $default-transition-time;
	user-select: none;

	&:disabled,
	&.-disabled {
		cursor: not-allowed;
		pointer-events: none;
	}

	@include buttonColors(
		map-get($button-colors, 'primary', 'color'),
		map-get($button-colors, 'primary', 'background'),
		map-get($button-colors, 'primary', 'hovered'),
		map-get($button-colors, 'primary', 'focused'),
		map-get($button-colors, 'primary', 'disabled'),
		map-get($button-colors, 'primary', 'ripple')
	);

	@each $color-name, $color-map in $icon-button-colors {
		&.-color-#{$color-name} {
			@include buttonColors(
				map-get($color-map, 'color'),
				map-get($color-map, 'background'),
				map-get($color-map, 'hovered'),
				map-get($color-map, 'focused'),
				map-get($color-map, 'disabled'),
				map-get($color-map, 'ripple')
			);
		}
	}

	&.-outlined {
		@include buttonColors(
			map-get($button-colors, 'primary', 'inverted', 'color'),
			'',
			map-get($button-colors, 'primary', 'inverted', 'hovered'),
			map-get($button-colors, 'primary', 'inverted', 'focused'),
			map-get($button-colors, 'primary', 'inverted', 'disabled'),
			map-get($button-colors, 'primary', 'inverted', 'ripple'),
			map-get($button-colors, 'primary', 'inverted', 'border')
		);

		@each $color-name, $color-map in $icon-button-colors {
			&.-color-#{$color-name} {
				@include buttonColors(
					map-get($color-map, 'inverted', 'color'),
					'',
					map-get($color-map, 'inverted', 'hovered'),
					map-get($color-map, 'inverted', 'focused'),
					map-get($color-map, 'inverted', 'disabled'),
					map-get($color-map, 'inverted', 'ripple'),
					map-get($color-map, 'inverted', 'border')
				);
			}
		}
	}

	&.-text {
		@include buttonColors(
			map-get($button-colors, 'primary', 'background'),
			'',
			map-get($button-colors, 'primary', 'hovered'),
			map-get($button-colors, 'primary', 'focused'),
			map-get($button-colors, 'primary', 'disabled')
		);

		@each $color-name, $color-map in $icon-button-colors {
			&.-color-#{$color-name} {
				@include buttonColors(
					map-get($color-map, 'background'),
					'',
					map-get($color-map, 'hovered'),
					map-get($color-map, 'focused'),
					map-get($color-map, 'disabled')
				);
			}
		}

		border: none;
		border-radius: 0;
		padding-left: 0;
		padding-right: 0;
	}

	&:not(.-text) {
		min-width: 100px;
	}

	&.-large {
		@include buttonL;

		min-height: $button-large-min-height;
		padding-left: $space-m;
		padding-right: $space-m;
	}

	&.-small {
		@include buttonS;

		min-height: $button-small-min-height;
	}

	&.-rounded {
		border-radius: $radius-s;
		padding-left: $space-xs;
		padding-right: $space-xs;

		&.-large {
			padding-left: $space-s;
			padding-right: $space-s;
		}
	}

	&.-loading {
		pointer-events: none;

		#{$self}__content {
			opacity: 0;
		}

		#{$self}__loadingIcon {
			animation: a-fadeIn 300ms ease-in-out 0s 1, a-spinAround 1500ms infinite linear;
			position: absolute;
		}
	}

	&.-elevation-small {
		box-shadow: $default-lighter-shadow;
	}

	&__content {
		align-items: center;
		display: inline-flex;
		transition: opacity ease-in-out $default-transition-time;
	}

	&__icon {
		&.-left {
			margin-right: $space-xxxxs;
		}

		&.-right {
			margin-left: $space-xxxxs;
		}
	}
}
