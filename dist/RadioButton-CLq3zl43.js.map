{"version":3,"file":"RadioButton-CLq3zl43.js","sources":["../lib/js/components/Form/RadioButton/RadioButton.consts.ts","../lib/js/components/Form/RadioButton/RadioButton.vue"],"sourcesContent":["import {\n\tSELECTION_CONTROL_SIZE,\n\tSELECTION_CONTROL_STATE,\n} from '../SelectionControl/SelectionControl.consts';\n\nexport const RADIO_BUTTON_SIZE = {\n\t...SELECTION_CONTROL_SIZE,\n} as const;\n\nexport type RadioButtonSize = typeof RADIO_BUTTON_SIZE[keyof typeof RADIO_BUTTON_SIZE];\nexport const RADIO_BUTTON_STATE = {\n\t...SELECTION_CONTROL_STATE,\n} as const;\n\nexport type RadioButtonState = typeof RADIO_BUTTON_STATE[keyof typeof RADIO_BUTTON_STATE];\n","<template>\n\t<selection-control\n\t\t:size=\"size\"\n\t\t:label=\"label\"\n\t\t:is-selected=\"isSelected\"\n\t\t:selected-icon=\"ICONS.FA_DOT_CIRCLE_SOLID\"\n\t\t:not-selected-icon=\"ICONS.FA_CIRCLE\"\n\t\t:state=\"state\"\n\t\t:type=\"SELECTION_CONTROL_TYPE.RADIO_BUTTON\"\n\t\t@update:is-selected=\"$emit('update:is-selected', $event)\"\n\t\t@input:focus=\"$emit('input:focus')\"\n\t\t@input:blur=\"$emit('input:blur')\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue';\nimport {\n\tRADIO_BUTTON_SIZE,\n\tRADIO_BUTTON_STATE,\n\tRadioButtonSize,\n\tRadioButtonState,\n} from './RadioButton.consts';\nimport SelectionControl from '../SelectionControl/SelectionControl.vue';\nimport { ICONS } from '../../Icons/Icon';\nimport { SELECTION_CONTROL_TYPE } from '../SelectionControl/SelectionControl.consts';\n\nexport default defineComponent({\n\tname: 'RadioButton',\n\tcomponents: { SelectionControl },\n\tprops: {\n\t\tsize: {\n\t\t\ttype: String as PropType<RadioButtonSize>,\n\t\t\tdefault: RADIO_BUTTON_SIZE.SMALL,\n\t\t\tvalidator(size: RadioButtonSize) {\n\t\t\t\treturn Object.values(RADIO_BUTTON_SIZE).includes(size);\n\t\t\t},\n\t\t},\n\t\tlabel: {\n\t\t\ttype: String,\n\t\t\tdefault: null,\n\t\t},\n\t\tisSelected: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tstate: {\n\t\t\ttype: String as PropType<RadioButtonState>,\n\t\t\tdefault: RADIO_BUTTON_STATE.DEFAULT,\n\t\t\tvalidator(state: RadioButtonState) {\n\t\t\t\treturn Object.values(RADIO_BUTTON_STATE).includes(state);\n\t\t\t},\n\t\t},\n\t},\n\t// TODO fix me when touching this file\n\t// eslint-disable-next-line vue/require-emit-validator\n\temits: ['update:is-selected', 'input:focus', 'input:blur'],\n\tdata() {\n\t\treturn {\n\t\t\tICONS: Object.freeze(ICONS),\n\t\t\tSELECTION_CONTROL_TYPE: Object.freeze(SELECTION_CONTROL_TYPE),\n\t\t};\n\t},\n});\n</script>\n"],"names":["RADIO_BUTTON_SIZE","SELECTION_CONTROL_SIZE","RADIO_BUTTON_STATE","SELECTION_CONTROL_STATE","_sfc_main","defineComponent","SelectionControl","size","state","ICONS","SELECTION_CONTROL_TYPE","_component_selection_control","_resolveComponent","_openBlock","_createBlock","_ctx","_cache","$emit","$event"],"mappings":";;AAKO,MAAMA,IAAoB;AAAA,EAChC,GAAGC;AACJ,GAGaC,IAAqB;AAAA,EACjC,GAAGC;AACJ,GCeAC,IAAeC,EAAgB;AAAA,EAC9B,MAAM;AAAA,EACN,YAAY,EAAE,kBAAAC,EAAiB;AAAA,EAC/B,OAAO;AAAA,IACN,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAASN,EAAkB;AAAA,MAC3B,UAAUO,GAAuB;AAChC,eAAO,OAAO,OAAOP,CAAiB,EAAE,SAASO,CAAI;AAAA,MAAA;AAAA,IAEvD;AAAA,IACA,OAAO;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACN,MAAM;AAAA,MACN,SAASL,EAAmB;AAAA,MAC5B,UAAUM,GAAyB;AAClC,eAAO,OAAO,OAAON,CAAkB,EAAE,SAASM,CAAK;AAAA,MAAA;AAAA,IACxD;AAAA,EAEF;AAAA;AAAA;AAAA,EAGA,OAAO,CAAC,sBAAsB,eAAe,YAAY;AAAA,EACzD,OAAO;AACC,WAAA;AAAA,MACN,OAAO,OAAO,OAAOC,CAAK;AAAA,MAC1B,wBAAwB,OAAO,OAAOC,CAAsB;AAAA,IAC7D;AAAA,EAAA;AAEF,CAAC;;AAnDE,QAAAC,IAAAC,EAAA,mBAAA;SATKC,EAAO,GAAAC,EAAAH,GAAA;AAAA,IACZ,MAAAI,EAAA;AAAA,IACA,OAAAA,EAAA;AAAA,IACA,eAAiBA,EAAA;AAAA,IACjB,iBAAYA,EAAA,MAAA;AAAA,IACZ,qBAAML,EAAAA,MAAAA;AAAAA,IACN,OAAAK,EAAA;AAAA,IACA,MAAWA,EAAA,uBAAA;AAAA,IACX,uBAAUC,uBAAEC,EAAK,MAAA,sBAAAC,CAAA;AAAA,IAAA,iBAAAF,EAAA,CAAA,MAAAA,EAAA,CAAA,IAAA,CAAAE,MAAAH,EAAA,MAAA,aAAA;AAAA;;;;"}